
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://phcsogbxgkmeskpowoba.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBoY3NvZ2J4Z2ttZXNrcG93b2JhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAzNDM4MzcsImV4cCI6MjA2NTkxOTgzN30.-3Yb_jHiMb5lC1dmDkRBsvGRoOcNL3Ebl_jq2ml6rGM";

// Rileva se siamo su mobile per configurare timeout piÃ¹ lunghi
const isMobile = () => {
  if (typeof navigator === 'undefined') return false;
  return /Mobi|Android/i.test(navigator.userAgent);
};

// Configurazione ottimizzata per mobile
const supabaseOptions = {
  db: {
    schema: 'public',
  },
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  },
  realtime: {
    // Timeout piÃ¹ lunghi per mobile per evitare disconnessioni
    timeout: isMobile() ? 30000 : 20000, // 30s per mobile, 20s per desktop
    heartbeatIntervalMs: isMobile() ? 15000 : 10000, // 15s per mobile, 10s per desktop
    reconnectAfterMs: (tries: number) => {
      const baseDelay = isMobile() ? 2000 : 1000;
      return Math.min(tries * baseDelay, 10000);
    }
  },
  global: {
    headers: {
      'X-Client-Info': `supabase-js-web/2.50.0${isMobile() ? '-mobile' : ''}`
    }
  }
};

console.log('ðŸ”§ Supabase client configurato per:', {
  isMobile: isMobile(),
  realtimeTimeout: supabaseOptions.realtime.timeout,
  heartbeatInterval: supabaseOptions.realtime.heartbeatIntervalMs
});

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, supabaseOptions);
